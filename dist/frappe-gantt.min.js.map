{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\nconst MONTH = 'month';\nconst DAY = 'day';\nconst HOUR = 'hour';\nconst MINUTE = 'minute';\nconst SECOND = 'second';\nconst MILLISECOND = 'millisecond';\n\nexport default {\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\n        if (date instanceof Date) {\n            return date;\n        }\n        if (typeof date === 'string') {\n            let date_parts, time_parts;\n            const parts = date.split(' ');\n\n            date_parts = parts[0]\n                .split(date_separator)\n                .map((val) => parseInt(val, 10));\n            time_parts = parts[1] && parts[1].split(time_separator);\n\n            // month is 0 indexed\n            date_parts[1] = date_parts[1] - 1;\n\n            let vals = date_parts;\n\n            if (time_parts && time_parts.length) {\n                if (time_parts.length == 4) {\n                    time_parts[3] = '0.' + time_parts[3];\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\n                }\n                vals = vals.concat(time_parts);\n            }\n\n            return new Date(...vals);\n        }\n    },\n\n    to_string(date, with_time = false) {\n        if (!(date instanceof Date)) {\n            throw new TypeError('Invalid argument type');\n        }\n        const vals = this.get_date_values(date).map((val, i) => {\n            if (i === 1) {\n                // add 1 for month\n                val = val + 1;\n            }\n\n            if (i === 6) {\n                return padStart(val + '', 3, '0');\n            }\n\n            return padStart(val + '', 2, '0');\n        });\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n        return date_string + (with_time ? ' ' + time_string : '');\n    },\n\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\n        const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n            month: 'long'\n        });\n        const month_name = dateTimeFormat.format(date);\n        const month_name_capitalized =\n            month_name.charAt(0).toUpperCase() + month_name.slice(1);\n\n        const values = this.get_date_values(date).map(d => padStart(d, 2, 0));\n        const format_map = {\n            YYYY: values[0],\n            MM: padStart(+values[1] + 1, 2, 0),\n            DD: values[2],\n            HH: values[3],\n            mm: values[4],\n            ss: values[5],\n            SSS: values[6],\n            D: values[2],\n            MMMM: month_name_capitalized,\n            MMM: month_name_capitalized,\n        };\n\n        let str = format_string;\n        const formatted_values = [];\n\n        Object.keys(format_map)\n            .sort((a, b) => b.length - a.length) // big string first\n            .forEach((key) => {\n                if (str.includes(key)) {\n                    str = str.replace(key, `$${formatted_values.length}`);\n                    formatted_values.push(format_map[key]);\n                }\n            });\n\n        formatted_values.forEach((value, i) => {\n            str = str.replace(`$${i}`, value);\n        });\n\n        return str;\n    },\n\n    diff(date_a, date_b, scale = DAY) {\n        let milliseconds, seconds, hours, minutes, days, months, years;\n\n        milliseconds = date_a - date_b;\n        seconds = milliseconds / 1000;\n        minutes = seconds / 60;\n        hours = minutes / 60;\n        days = hours / 24;\n        months = days / 30;\n        years = months / 12;\n\n        if (!scale.endsWith('s')) {\n            scale += 's';\n        }\n\n        return Math.floor(\n            {\n                milliseconds,\n                seconds,\n                minutes,\n                hours,\n                days,\n                months,\n                years,\n            }[scale]\n        );\n    },\n\n    today() {\n        const vals = this.get_date_values(new Date()).slice(0, 3);\n        return new Date(...vals);\n    },\n\n    now() {\n        return new Date();\n    },\n\n    add(date, qty, scale) {\n        qty = parseInt(qty, 10);\n        const vals = [\n            date.getFullYear() + (scale === YEAR ? qty : 0),\n            date.getMonth() + (scale === MONTH ? qty : 0),\n            date.getDate() + (scale === DAY ? qty : 0),\n            date.getHours() + (scale === HOUR ? qty : 0),\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\n            date.getSeconds() + (scale === SECOND ? qty : 0),\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n        ];\n        return new Date(...vals);\n    },\n\n    start_of(date, scale) {\n        const scores = {\n            [YEAR]: 6,\n            [MONTH]: 5,\n            [DAY]: 4,\n            [HOUR]: 3,\n            [MINUTE]: 2,\n            [SECOND]: 1,\n            [MILLISECOND]: 0,\n        };\n\n        function should_reset(_scale) {\n            const max_score = scores[scale];\n            return scores[_scale] <= max_score;\n        }\n\n        const vals = [\n            date.getFullYear(),\n            should_reset(YEAR) ? 0 : date.getMonth(),\n            should_reset(MONTH) ? 1 : date.getDate(),\n            should_reset(DAY) ? 0 : date.getHours(),\n            should_reset(HOUR) ? 0 : date.getMinutes(),\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\n        ];\n\n        return new Date(...vals);\n    },\n\n    clone(date) {\n        return new Date(...this.get_date_values(date));\n    },\n\n    get_date_values(date) {\n        return [\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes(),\n            date.getSeconds(),\n            date.getMilliseconds(),\n        ];\n    },\n\n    get_days_in_month(date) {\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n        const month = date.getMonth();\n\n        if (month !== 1) {\n            return no_of_days[month];\n        }\n\n        // Feb\n        const year = date.getFullYear();\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\n            return 29;\n        }\n        return 28;\n    },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n    str = str + '';\n    targetLength = targetLength >> 0;\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\n    if (str.length > targetLength) {\n        return String(str);\n    } else {\n        targetLength = targetLength - str.length;\n        if (targetLength > padString.length) {\n            padString += padString.repeat(targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + String(str);\n    }\n}\n","export function $(expr, con) {\n    return typeof expr === 'string'\n        ? (con || document).querySelector(expr)\n        : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    for (let attr in attrs) {\n        if (attr === 'append_to') {\n            const parent = attrs.append_to;\n            parent.appendChild(elem);\n        } else if (attr === 'innerHTML') {\n            elem.innerHTML = attrs.innerHTML;\n        } else {\n            elem.setAttribute(attr, attrs[attr]);\n        }\n    }\n    return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n    if (animatedSvgElement === svgElement) {\n        // triggered 2nd time programmatically\n        // trigger artificial click event\n        const event = document.createEvent('HTMLEvents');\n        event.initEvent('click', true, true);\n        event.eventName = 'click';\n        animatedSvgElement.dispatchEvent(event);\n    }\n}\n\nfunction getAnimationElement(\n    svgElement,\n    attr,\n    from,\n    to,\n    dur = '0.4s',\n    begin = '0.1s'\n) {\n    const animEl = svgElement.querySelector('animate');\n    if (animEl) {\n        $.attr(animEl, {\n            attributeName: attr,\n            from,\n            to,\n            dur,\n            begin: 'click + ' + begin, // artificial click\n        });\n        return svgElement;\n    }\n\n    const animateElement = createSVG('animate', {\n        attributeName: attr,\n        from,\n        to,\n        dur,\n        begin,\n        calcMode: 'spline',\n        values: from + ';' + to,\n        keyTimes: '0; 1',\n        keySplines: cubic_bezier('ease-out'),\n    });\n    svgElement.appendChild(animateElement);\n\n    return svgElement;\n}\n\nfunction cubic_bezier(name) {\n    return {\n        ease: '.25 .1 .25 1',\n        linear: '0 0 1 1',\n        'ease-in': '.42 0 1 1',\n        'ease-out': '0 0 .58 1',\n        'ease-in-out': '.42 0 .58 1',\n    }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n    if (!callback) {\n        callback = selector;\n        $.bind(element, event, callback);\n    } else {\n        $.delegate(element, event, selector, callback);\n    }\n};\n\n$.off = (element, event, handler) => {\n    element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n    event.split(/\\s+/).forEach(function (event) {\n        element.addEventListener(event, callback);\n    });\n};\n\n$.delegate = (element, event, selector, callback) => {\n    element.addEventListener(event, function (e) {\n        const delegatedTarget = e.target.closest(selector);\n        if (delegatedTarget) {\n            e.delegatedTarget = delegatedTarget;\n            callback.call(this, e, delegatedTarget);\n        }\n    });\n};\n\n$.closest = (selector, element) => {\n    if (!element) return null;\n\n    if (element.matches(selector)) {\n        return element;\n    }\n\n    return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n    if (!value && typeof attr === 'string') {\n        return element.getAttribute(attr);\n    }\n\n    if (typeof attr === 'object') {\n        for (let key in attr) {\n            $.attr(element, key, attr[key]);\n        }\n        return;\n    }\n\n    element.setAttribute(attr, value);\n};\n","import date_utils from './date_utils';\nimport { $, createSVG, animateSVG } from './svg_utils';\n\nexport default class Bar {\n    constructor(gantt, task) {\n        this.set_defaults(gantt, task);\n        this.prepare();\n        this.draw();\n        this.bind();\n    }\n\n    set_defaults(gantt, task) {\n        this.gantt = gantt;\n        this.task = task;\n    }\n\n    prepare() {\n        this.prepare_values();\n        this.prepare_helpers();\n    }\n\n    prepare_values() {\n        this.invalid = this.task.invalid;\n        this.height = this.gantt.options.bar_height;\n        this.x = this.compute_x();\n        this.y = this.compute_y();\n        this.corner_radius = this.gantt.options.bar_corner_radius;\n        this.duration =\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\n            this.gantt.options.step;\n        this.width = this.gantt.options.column_width * this.duration;\n        this.group = createSVG('g', {\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\n            'data-id': this.task.id,\n        });\n        this.bar_group = createSVG('g', {\n            class: 'bar-group',\n            append_to: this.group,\n        });\n    }\n\n    prepare_helpers() {\n        SVGElement.prototype.getX = function () {\n            return +this.getAttribute('x');\n        };\n        SVGElement.prototype.getY = function () {\n            return +this.getAttribute('y');\n        };\n        SVGElement.prototype.getWidth = function () {\n            return +this.getAttribute('width');\n        };\n        SVGElement.prototype.getHeight = function () {\n            return +this.getAttribute('height');\n        };\n        SVGElement.prototype.getEndX = function () {\n            return this.getX() + this.getWidth();\n        };\n    }\n\n    draw() {\n        this.draw_bar();\n        this.draw_label();\n    }\n\n    draw_bar() {\n        this.$bar = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar',\n            append_to: this.bar_group,\n        });\n\n        animateSVG(this.$bar, 'width', 0, this.width);\n\n        if (this.invalid) {\n            this.$bar.classList.add('bar-invalid');\n        }\n    }\n\n    draw_label() {\n        createSVG('text', {\n            x: this.x + this.width / 2,\n            y: this.y + this.height / 2,\n            innerHTML: this.task.name,\n            class: 'bar-label',\n            append_to: this.bar_group,\n        });\n        // labels get BBox in the next tick\n        requestAnimationFrame(() => this.update_label_position());\n    }\n\n    bind() {\n        if (this.invalid) return;\n        this.setup_click_event();\n    }\n\n    setup_click_event() {\n        $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, (e) => {\n            this.show_popup();\n            this.gantt.unselect_all();\n            this.group.classList.add('active');\n        });\n\n        $.on(this.group, 'dblclick', (e) => {\n            this.gantt.trigger_event('click', [this.task]);\n        });\n    }\n\n    show_popup() {\n        const start_date = date_utils.format(\n            this.task._start,\n            'MMM D',\n            this.gantt.options.language\n        );\n        const end_date = date_utils.format(\n            date_utils.add(this.task._end, -1, 'second'),\n            'MMM D',\n            this.gantt.options.language\n        );\n        const subtitle = start_date + ' - ' + end_date;\n\n        this.gantt.show_popup({\n            target_element: this.$bar,\n            title: this.task.name,\n            subtitle: subtitle,\n            task: this.task,\n        });\n    }\n\n    compute_x() {\n        const { step, column_width } = this.gantt.options;\n        const task_start = this.task._start;\n        const gantt_start = this.gantt.gantt_start;\n\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\n        let x = (diff / step) * column_width;\n\n        if (this.gantt.view_is('Month')) {\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\n            x = (diff * column_width) / 30;\n        }\n        return x;\n    }\n\n    compute_y() {\n        return (\n            this.gantt.options.header_height +\n            this.gantt.options.padding +\n            this.task._index * (this.height + this.gantt.options.padding)\n        );\n    }\n\n    update_label_position() {\n        const bar = this.$bar,\n            label = this.group.querySelector('.bar-label');\n\n        if (label.getBBox().width > bar.getWidth() && this.gantt.options.render_big_labels_outside) {\n            label.classList.add('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\n        } else {\n            label.classList.remove('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\n        }\n    }\n}\n","export default class Popup {\n    constructor(parent, custom_html) {\n        this.parent = parent;\n        this.custom_html = custom_html;\n        this.make();\n    }\n\n    make() {\n        this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n        this.hide();\n\n        this.title = this.parent.querySelector('.title');\n        this.subtitle = this.parent.querySelector('.subtitle');\n        this.pointer = this.parent.querySelector('.pointer');\n    }\n\n    show(options) {\n        if (!options.target_element) {\n            throw new Error('target_element is required to show popup');\n        }\n        if (!options.position) {\n            options.position = 'left';\n        }\n        const target_element = options.target_element;\n\n        if (this.custom_html) {\n            let html = this.custom_html(options.task);\n            html += '<div class=\"pointer\"></div>';\n            this.parent.innerHTML = html;\n            this.pointer = this.parent.querySelector('.pointer');\n        } else {\n            // set data\n            this.title.innerHTML = options.title;\n            this.subtitle.innerHTML = options.subtitle;\n            this.parent.style.width = this.parent.clientWidth + 'px';\n        }\n\n        // set position\n        let position_meta;\n        if (target_element instanceof HTMLElement) {\n            position_meta = target_element.getBoundingClientRect();\n        } else if (target_element instanceof SVGElement) {\n            position_meta = options.target_element.getBBox();\n        }\n\n        if (options.position === 'left') {\n            this.parent.style.left =\n                position_meta.x + (position_meta.width + 10) + 'px';\n            this.parent.style.top = position_meta.y + 'px';\n\n            this.pointer.style.transform = 'rotateZ(90deg)';\n            this.pointer.style.left = '-7px';\n            this.pointer.style.top = '2px';\n        }\n\n        // show\n        this.parent.style.opacity = 1;\n    }\n\n    hide() {\n        this.parent.style.opacity = 0;\n        this.parent.style.left = 0;\n    }\n}\n","import date_utils from './date_utils';\nimport { $, createSVG } from './svg_utils';\nimport Bar from './bar';\nimport Popup from './popup';\n\nimport './gantt.scss';\n\nconst VIEW_MODE = {\n    QUARTER_DAY: 'Quarter Day',\n    HALF_DAY: 'Half Day',\n    DAY: 'Day',\n    WEEK: 'Week',\n    MONTH: 'Month',\n    YEAR: 'Year',\n};\n\nexport default class Gantt {\n    constructor(wrapper, tasks, options) {\n        this.setup_wrapper(wrapper);\n        this.setup_options(options);\n        this.setup_tasks(tasks);\n        // initialize with default view mode\n        this.change_view_mode();\n        this.bind_events();\n    }\n\n    setup_wrapper(element) {\n        let svg_element, wrapper_element;\n\n        // CSS Selector is passed\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        }\n\n        // get the SVGElement\n        if (element instanceof HTMLElement) {\n            wrapper_element = element;\n            svg_element = element.querySelector('svg');\n        } else if (element instanceof SVGElement) {\n            svg_element = element;\n        } else {\n            throw new TypeError(\n                'Frappé Gantt only supports usage of a string CSS selector,' +\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\"\n            );\n        }\n\n        // svg element\n        if (!svg_element) {\n            // create it\n            this.$svg = createSVG('svg', {\n                append_to: wrapper_element,\n                class: 'gantt',\n            });\n        } else {\n            this.$svg = svg_element;\n            this.$svg.classList.add('gantt');\n        }\n\n        // wrapper element\n        this.$container = document.createElement('div');\n        this.$container.classList.add('gantt-container');\n\n        const parent_element = this.$svg.parentElement;\n        parent_element.appendChild(this.$container);\n        this.$container.appendChild(this.$svg);\n\n        // popup wrapper\n        this.popup_wrapper = document.createElement('div');\n        this.popup_wrapper.classList.add('popup-wrapper');\n        this.$container.appendChild(this.popup_wrapper);\n    }\n\n    setup_options(options) {\n        const default_options = {\n            header_height: 50,\n            column_width: 30,\n            step: 24,\n            view_modes: [...Object.values(VIEW_MODE)],\n            bar_height: 20,\n            bar_corner_radius: 3,\n            padding: 18,\n            view_mode: 'Day',\n            date_format: 'YYYY-MM-DD',\n            popup_trigger: 'click',\n            custom_popup_html: null,\n            language: 'en',\n            render_big_labels_outside: true,\n        };\n        this.options = Object.assign({}, default_options, options);\n    }\n\n    setup_tasks(tasks) {\n        // prepare tasks\n        this.tasks = tasks.map((task, i) => {\n            // convert to Date objects\n            task._start = date_utils.parse(task.start);\n            task._end = date_utils.parse(task.end);\n\n            // make task invalid if duration too large\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\n                task.end = null;\n            }\n\n            if (undefined === task._index) {\n                task._index = 0;\n            }\n\n            // invalid dates\n            if (!task.start && !task.end) {\n                const today = date_utils.today();\n                task._start = today;\n                task._end = date_utils.add(today, 2, 'day');\n            }\n\n            if (!task.start && task.end) {\n                task._start = date_utils.add(task._end, -2, 'day');\n            }\n\n            if (task.start && !task.end) {\n                task._end = date_utils.add(task._start, 2, 'day');\n            }\n\n            // if hours is not set, assume the last day is full day\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n            const task_end_values = date_utils.get_date_values(task._end);\n            if (task_end_values.slice(3).every((d) => d === 0)) {\n                task._end = date_utils.add(task._end, 24, 'hour');\n            }\n\n            // invalid flag\n            if (!task.start || !task.end) {\n                task.invalid = true;\n            }\n\n            // uids\n            if (!task.id) {\n                task.id = generate_id(task);\n            }\n\n            return task;\n        });\n\n        const reducer = (acc, task) => Math.max(task._index, acc);\n        this.rows = this.tasks.reduce(reducer, 0) + 1;\n    }\n\n    refresh(tasks) {\n        this.setup_tasks(tasks);\n        this.change_view_mode();\n    }\n\n    change_view_mode(mode = this.options.view_mode) {\n        this.update_view_scale(mode);\n        this.setup_dates();\n        this.render();\n        // fire viewmode_change event\n        this.trigger_event('view_change', [mode]);\n    }\n\n    update_view_scale(view_mode) {\n        this.options.view_mode = view_mode;\n\n        if (view_mode === VIEW_MODE.DAY) {\n            this.options.step = 24;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\n            this.options.step = 24 / 2;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n            this.options.step = 24 / 4;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.WEEK) {\n            this.options.step = 24 * 7;\n            this.options.column_width = 140;\n        } else if (view_mode === VIEW_MODE.MONTH) {\n            this.options.step = 24 * 30;\n            this.options.column_width = 120;\n        } else if (view_mode === VIEW_MODE.YEAR) {\n            this.options.step = 24 * 365;\n            this.options.column_width = 120;\n        }\n    }\n\n    setup_dates() {\n        this.setup_gantt_dates();\n        this.setup_date_values();\n    }\n\n    setup_gantt_dates() {\n        this.gantt_start = this.gantt_end = null;\n\n        for (let task of this.tasks) {\n            // set global start and end date\n            if (!this.gantt_start || task._start < this.gantt_start) {\n                this.gantt_start = task._start;\n            }\n            if (!this.gantt_end || task._end > this.gantt_end) {\n                this.gantt_end = task._end;\n            }\n        }\n\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\n        this.gantt_end = date_utils.start_of(this.gantt_end, 'day');\n\n        // add date padding on both sides\n        if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\n            this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\n        } else {\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\n        }\n    }\n\n    setup_date_values() {\n        this.dates = [];\n        let cur_date = null;\n\n        while (cur_date === null || cur_date < this.gantt_end) {\n            if (!cur_date) {\n                cur_date = date_utils.clone(this.gantt_start);\n            } else {\n                if (this.view_is(VIEW_MODE.YEAR)) {\n                    cur_date = date_utils.add(cur_date, 1, 'year');\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\n                    cur_date = date_utils.add(cur_date, 1, 'month');\n                } else {\n                    cur_date = date_utils.add(\n                        cur_date,\n                        this.options.step,\n                        'hour'\n                    );\n                }\n            }\n            this.dates.push(cur_date);\n        }\n    }\n\n    bind_events() {\n        this.bind_grid_click();\n    }\n\n    render() {\n        this.clear();\n        this.setup_layers();\n        this.make_grid();\n        this.make_dates();\n        this.make_bars();\n        this.set_width();\n        this.set_scroll_position();\n    }\n\n    setup_layers() {\n        this.layers = {};\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\n        // make group layers\n        for (let layer of layers) {\n            this.layers[layer] = createSVG('g', {\n                class: layer,\n                append_to: this.$svg,\n            });\n        }\n    }\n\n    make_grid() {\n        this.make_grid_background();\n        this.make_grid_rows();\n        this.make_grid_header();\n        this.make_grid_ticks();\n        this.make_grid_highlights();\n    }\n\n    make_grid_background() {\n        const grid_width = this.dates.length * this.options.column_width;\n        const grid_height =\n            this.options.header_height +\n            this.options.padding +\n            (this.options.bar_height + this.options.padding) *\n                this.rows;\n\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: grid_width,\n            height: grid_height,\n            class: 'grid-background',\n            append_to: this.layers.grid,\n        });\n\n        $.attr(this.$svg, {\n            height: grid_height,\n            width: '100%',\n        });\n    }\n\n    make_grid_rows() {\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\n\n        const row_width = this.dates.length * this.options.column_width;\n        const row_height = this.options.bar_height + this.options.padding;\n\n        let row_y = this.options.header_height + this.options.padding / 2;\n\n        for (let i = 0; i < this.rows; i++) {\n            createSVG('rect', {\n                x: 0,\n                y: row_y,\n                width: row_width,\n                height: row_height,\n                class: 'grid-row',\n                append_to: rows_layer,\n            });\n\n            createSVG('line', {\n                x1: 0,\n                y1: row_y + row_height,\n                x2: row_width,\n                y2: row_y + row_height,\n                class: 'row-line',\n                append_to: lines_layer,\n            });\n\n            row_y += this.options.bar_height + this.options.padding;\n        }\n    }\n\n    make_grid_header() {\n        const header_width = this.dates.length * this.options.column_width;\n        const header_height = this.options.header_height + 10;\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: header_width,\n            height: header_height,\n            class: 'grid-header',\n            append_to: this.layers.grid,\n        });\n    }\n\n    make_grid_ticks() {\n        let tick_x = 0;\n        let tick_y = this.options.header_height + this.options.padding / 2;\n        let tick_height =\n            (this.options.bar_height + this.options.padding) *\n            this.rows;\n\n        for (let date of this.dates) {\n            let tick_class = 'tick';\n            // thick tick for monday\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n                tick_class += ' thick';\n            }\n            // thick tick for first week\n            if (\n                this.view_is(VIEW_MODE.WEEK) &&\n                date.getDate() >= 1 &&\n                date.getDate() < 8\n            ) {\n                tick_class += ' thick';\n            }\n            // thick ticks for quarters\n            if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n                tick_class += ' thick';\n            }\n\n            createSVG('path', {\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n                class: tick_class,\n                append_to: this.layers.grid,\n            });\n\n            if (this.view_is(VIEW_MODE.MONTH)) {\n                tick_x +=\n                    (date_utils.get_days_in_month(date) *\n                        this.options.column_width) /\n                    30;\n            } else {\n                tick_x += this.options.column_width;\n            }\n        }\n    }\n\n    make_grid_highlights() {\n        // highlight today's date\n        if (this.view_is(VIEW_MODE.DAY)) {\n            const x =\n                (date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\n                    this.options.step) *\n                this.options.column_width;\n            const y = 0;\n\n            const width = this.options.column_width;\n            const height =\n                (this.options.bar_height + this.options.padding) *\n                    this.rows +\n                this.options.header_height +\n                this.options.padding / 2;\n\n            createSVG('rect', {\n                x,\n                y,\n                width,\n                height,\n                class: 'today-highlight',\n                append_to: this.layers.grid,\n            });\n        }\n    }\n\n    make_dates() {\n        for (let date of this.get_dates_to_draw()) {\n            createSVG('text', {\n                x: date.lower_x,\n                y: date.lower_y,\n                innerHTML: date.lower_text,\n                class: 'lower-text',\n                append_to: this.layers.date,\n            });\n\n            if (date.upper_text) {\n                const $upper_text = createSVG('text', {\n                    x: date.upper_x,\n                    y: date.upper_y,\n                    innerHTML: date.upper_text,\n                    class: 'upper-text',\n                    append_to: this.layers.date,\n                });\n\n                // remove out-of-bound dates\n                if (\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\n                ) {\n                    $upper_text.remove();\n                }\n            }\n        }\n    }\n\n    get_dates_to_draw() {\n        let last_date = null;\n        const dates = this.dates.map((date, i) => {\n            const d = this.get_date_info(date, last_date, i);\n            last_date = date;\n            return d;\n        });\n        return dates;\n    }\n\n    get_date_info(date, last_date, i) {\n        if (!last_date) {\n            last_date = date_utils.add(date, 1, 'year');\n        }\n        const date_text = {\n            'Quarter Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            'Half Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            Day_lower:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Week_lower:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : date_utils.format(date, 'D', this.options.language),\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\n            'Quarter Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : '',\n            'Half Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date.getMonth() !== last_date.getMonth()\n                        ? date_utils.format(\n                              date,\n                              'D MMM',\n                              this.options.language\n                          )\n                        : date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Day_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Week_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Month_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n            Year_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n        };\n\n        const base_pos = {\n            x: i * this.options.column_width,\n            lower_y: this.options.header_height,\n            upper_y: this.options.header_height - 25,\n        };\n\n        const x_pos = {\n            'Quarter Day_lower': (this.options.column_width * 4) / 2,\n            'Quarter Day_upper': 0,\n            'Half Day_lower': (this.options.column_width * 2) / 2,\n            'Half Day_upper': 0,\n            Day_lower: this.options.column_width / 2,\n            Day_upper: (this.options.column_width * 30) / 2,\n            Week_lower: 0,\n            Week_upper: (this.options.column_width * 4) / 2,\n            Month_lower: this.options.column_width / 2,\n            Month_upper: (this.options.column_width * 12) / 2,\n            Year_lower: this.options.column_width / 2,\n            Year_upper: (this.options.column_width * 30) / 2,\n        };\n\n        return {\n            upper_text: date_text[`${this.options.view_mode}_upper`],\n            lower_text: date_text[`${this.options.view_mode}_lower`],\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n            upper_y: base_pos.upper_y,\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n            lower_y: base_pos.lower_y,\n        };\n    }\n\n    make_bars() {\n        this.bars = this.tasks.map((task) => {\n            const bar = new Bar(this, task);\n            this.layers.bar.appendChild(bar.group);\n            return bar;\n        });\n    }\n\n    set_width() {\n        const cur_width = this.$svg.getBoundingClientRect().width;\n        const actual_width = this.$svg\n            .querySelector('.grid .grid-row')\n            .getAttribute('width');\n        if (cur_width < actual_width) {\n            this.$svg.setAttribute('width', actual_width);\n        }\n    }\n\n    set_scroll_position() {\n        const parent_element = this.$svg.parentElement;\n        if (!parent_element) return;\n\n        const hours_before_first_task = date_utils.diff(\n            this.get_oldest_starting_date(),\n            this.gantt_start,\n            'hour'\n        );\n\n        const scroll_pos =\n            (hours_before_first_task / this.options.step) *\n                this.options.column_width -\n            this.options.column_width;\n\n        parent_element.scrollLeft = scroll_pos;\n    }\n\n    bind_grid_click() {\n        $.on(\n            this.$svg,\n            this.options.popup_trigger,\n            '.grid-row, .grid-header',\n            () => {\n                this.unselect_all();\n                this.hide_popup();\n            }\n        );\n    }\n\n    unselect_all() {\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\n            el.classList.remove('active');\n        });\n    }\n\n    view_is(modes) {\n        if (typeof modes === 'string') {\n            return this.options.view_mode === modes;\n        }\n\n        if (Array.isArray(modes)) {\n            return modes.some((mode) => this.options.view_mode === mode);\n        }\n\n        return false;\n    }\n\n    get_bar(id) {\n        return this.bars.find((bar) => {\n            return bar.task.id === id;\n        });\n    }\n\n    show_popup(options) {\n        if (!this.popup) {\n            this.popup = new Popup(\n                this.popup_wrapper,\n                this.options.custom_popup_html\n            );\n        }\n        this.popup.show(options);\n    }\n\n    hide_popup() {\n        this.popup && this.popup.hide();\n    }\n\n    trigger_event(event, args) {\n        if (this.options['on_' + event]) {\n            this.options['on_' + event].apply(null, args);\n        }\n    }\n\n    /**\n     * Gets the oldest starting date from the list of tasks\n     *\n     * @returns Date\n     * @memberof Gantt\n     */\n    get_oldest_starting_date() {\n        return this.tasks\n            .map((task) => task._start)\n            .reduce((prev_date, cur_date) =>\n                cur_date <= prev_date ? cur_date : prev_date\n            );\n    }\n\n    /**\n     * Clear all elements from the parent svg element\n     *\n     * @memberof Gantt\n     */\n    clear() {\n        this.$svg.innerHTML = '';\n    }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","prepare_values","prepare_helpers","invalid","height","options","bar_height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","group","class","custom_class","id","bar_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","draw_bar","draw_label","$bar","rx","ry","classList","requestAnimationFrame","update_label_position","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","subtitle","language","target_element","title","task_start","gantt_start","view_is","header_height","padding","_index","bar","label","getBBox","render_big_labels_outside","remove","Popup","parent","custom_html","make","hide","pointer","show","Error","position","html","style","clientWidth","position_meta","HTMLElement","getBoundingClientRect","left","top","transform","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","createElement","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","assign","start","end","undefined","every","random","toString","generate_id","rows","reduce","acc","max","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","dates","cur_date","bind_grid_click","clear","setup_layers","make_grid","make_dates","make_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","grid","rows_layer","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","tick_x","tick_y","tick_height","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Day_lower","Week_lower","Month_lower","Year_lower","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","querySelectorAll","el","modes","Array","isArray","some","get_bar","find","popup","args","apply","prev_date"],"mappings":"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"}