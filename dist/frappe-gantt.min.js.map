{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\nconst MONTH = 'month';\nconst DAY = 'day';\nconst HOUR = 'hour';\nconst MINUTE = 'minute';\nconst SECOND = 'second';\nconst MILLISECOND = 'millisecond';\n\nexport default {\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\n        if (date instanceof Date) {\n            return date;\n        }\n        if (typeof date === 'string') {\n            let date_parts, time_parts;\n            const parts = date.split(' ');\n\n            date_parts = parts[0]\n                .split(date_separator)\n                .map((val) => parseInt(val, 10));\n            time_parts = parts[1] && parts[1].split(time_separator);\n\n            // month is 0 indexed\n            date_parts[1] = date_parts[1] - 1;\n\n            let vals = date_parts;\n\n            if (time_parts && time_parts.length) {\n                if (time_parts.length == 4) {\n                    time_parts[3] = '0.' + time_parts[3];\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\n                }\n                vals = vals.concat(time_parts);\n            }\n\n            return new Date(...vals);\n        }\n    },\n\n    to_string(date, with_time = false) {\n        if (!(date instanceof Date)) {\n            throw new TypeError('Invalid argument type');\n        }\n        const vals = this.get_date_values(date).map((val, i) => {\n            if (i === 1) {\n                // add 1 for month\n                val = val + 1;\n            }\n\n            if (i === 6) {\n                return padStart(val + '', 3, '0');\n            }\n\n            return padStart(val + '', 2, '0');\n        });\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n        return date_string + (with_time ? ' ' + time_string : '');\n    },\n\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\n        const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n            month: 'long'\n        });\n        const month_name = dateTimeFormat.format(date);\n        const month_name_capitalized =\n            month_name.charAt(0).toUpperCase() + month_name.slice(1);\n\n        const values = this.get_date_values(date).map(d => padStart(d, 2, 0));\n        const format_map = {\n            YYYY: values[0],\n            MM: padStart(+values[1] + 1, 2, 0),\n            DD: values[2],\n            HH: values[3],\n            mm: values[4],\n            ss: values[5],\n            SSS: values[6],\n            D: values[2],\n            MMMM: month_name_capitalized,\n            MMM: month_name_capitalized,\n        };\n\n        let str = format_string;\n        const formatted_values = [];\n\n        Object.keys(format_map)\n            .sort((a, b) => b.length - a.length) // big string first\n            .forEach((key) => {\n                if (str.includes(key)) {\n                    str = str.replace(key, `$${formatted_values.length}`);\n                    formatted_values.push(format_map[key]);\n                }\n            });\n\n        formatted_values.forEach((value, i) => {\n            str = str.replace(`$${i}`, value);\n        });\n\n        return str;\n    },\n\n    diff(date_a, date_b, scale = DAY) {\n        let milliseconds, seconds, hours, minutes, days, months, years;\n\n        milliseconds = date_a - date_b;\n        seconds = milliseconds / 1000;\n        minutes = seconds / 60;\n        hours = minutes / 60;\n        days = hours / 24;\n        months = days / 30;\n        years = months / 12;\n\n        if (!scale.endsWith('s')) {\n            scale += 's';\n        }\n\n        return Math.floor(\n            {\n                milliseconds,\n                seconds,\n                minutes,\n                hours,\n                days,\n                months,\n                years,\n            }[scale]\n        );\n    },\n\n    today() {\n        const vals = this.get_date_values(new Date()).slice(0, 3);\n        return new Date(...vals);\n    },\n\n    now() {\n        return new Date();\n    },\n\n    add(date, qty, scale) {\n        qty = parseInt(qty, 10);\n        const vals = [\n            date.getFullYear() + (scale === YEAR ? qty : 0),\n            date.getMonth() + (scale === MONTH ? qty : 0),\n            date.getDate() + (scale === DAY ? qty : 0),\n            date.getHours() + (scale === HOUR ? qty : 0),\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\n            date.getSeconds() + (scale === SECOND ? qty : 0),\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n        ];\n        return new Date(...vals);\n    },\n\n    start_of(date, scale) {\n        const scores = {\n            [YEAR]: 6,\n            [MONTH]: 5,\n            [DAY]: 4,\n            [HOUR]: 3,\n            [MINUTE]: 2,\n            [SECOND]: 1,\n            [MILLISECOND]: 0,\n        };\n\n        function should_reset(_scale) {\n            const max_score = scores[scale];\n            return scores[_scale] <= max_score;\n        }\n\n        const vals = [\n            date.getFullYear(),\n            should_reset(YEAR) ? 0 : date.getMonth(),\n            should_reset(MONTH) ? 1 : date.getDate(),\n            should_reset(DAY) ? 0 : date.getHours(),\n            should_reset(HOUR) ? 0 : date.getMinutes(),\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\n        ];\n\n        return new Date(...vals);\n    },\n\n    clone(date) {\n        return new Date(...this.get_date_values(date));\n    },\n\n    get_date_values(date) {\n        return [\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes(),\n            date.getSeconds(),\n            date.getMilliseconds(),\n        ];\n    },\n\n    get_days_in_month(date) {\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n        const month = date.getMonth();\n\n        if (month !== 1) {\n            return no_of_days[month];\n        }\n\n        // Feb\n        const year = date.getFullYear();\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\n            return 29;\n        }\n        return 28;\n    },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n    str = str + '';\n    targetLength = targetLength >> 0;\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\n    if (str.length > targetLength) {\n        return String(str);\n    } else {\n        targetLength = targetLength - str.length;\n        if (targetLength > padString.length) {\n            padString += padString.repeat(targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + String(str);\n    }\n}\n","export function $(expr, con) {\n    return typeof expr === 'string'\n        ? (con || document).querySelector(expr)\n        : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    for (let attr in attrs) {\n        if (attr === 'append_to') {\n            const parent = attrs.append_to;\n            parent.appendChild(elem);\n        } else if (attr === 'innerHTML') {\n            elem.innerHTML = attrs.innerHTML;\n        } else {\n            elem.setAttribute(attr, attrs[attr]);\n        }\n    }\n    return elem;\n}\n\n$.on = (element, event, selector, callback) => {\n    if (!callback) {\n        callback = selector;\n        $.bind(element, event, callback);\n    } else {\n        $.delegate(element, event, selector, callback);\n    }\n};\n\n$.off = (element, event, handler) => {\n    element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n    event.split(/\\s+/).forEach(function (event) {\n        element.addEventListener(event, callback);\n    });\n};\n\n$.delegate = (element, event, selector, callback) => {\n    element.addEventListener(event, function (e) {\n        const delegatedTarget = e.target.closest(selector);\n        if (delegatedTarget) {\n            e.delegatedTarget = delegatedTarget;\n            callback.call(this, e, delegatedTarget);\n        }\n    });\n};\n\n$.closest = (selector, element) => {\n    if (!element) return null;\n\n    if (element.matches(selector)) {\n        return element;\n    }\n\n    return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n    if (!value && typeof attr === 'string') {\n        return element.getAttribute(attr);\n    }\n\n    if (typeof attr === 'object') {\n        for (let key in attr) {\n            $.attr(element, key, attr[key]);\n        }\n        return;\n    }\n\n    element.setAttribute(attr, value);\n};\n","import date_utils from './date_utils';\nimport { $, createSVG } from './svg_utils';\n\nexport default class Bar {\n    constructor(gantt, task) {\n        this.set_defaults(gantt, task);\n        this.prepare();\n        this.draw();\n        this.bind();\n    }\n\n    set_defaults(gantt, task) {\n        this.gantt = gantt;\n        this.task = task;\n    }\n\n    prepare() {\n        this.prepare_values();\n        this.prepare_helpers();\n    }\n\n    prepare_values() {\n        this.invalid = this.task.invalid;\n        this.height = this.gantt.options.bar_height;\n        this.x = this.compute_x();\n        this.y = this.compute_y();\n        this.corner_radius = this.gantt.options.bar_corner_radius;\n        this.duration =\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\n            this.gantt.options.step;\n        this.width = this.gantt.options.column_width * this.duration;\n        this.group = createSVG('g', {\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\n            'data-id': this.task.id,\n        });\n        this.bar_group = createSVG('g', {\n            class: 'bar-group',\n            append_to: this.group,\n        });\n    }\n\n    prepare_helpers() {\n        SVGElement.prototype.getX = function () {\n            return +this.getAttribute('x');\n        };\n        SVGElement.prototype.getY = function () {\n            return +this.getAttribute('y');\n        };\n        SVGElement.prototype.getWidth = function () {\n            return +this.getAttribute('width');\n        };\n        SVGElement.prototype.getHeight = function () {\n            return +this.getAttribute('height');\n        };\n        SVGElement.prototype.getEndX = function () {\n            return this.getX() + this.getWidth();\n        };\n    }\n\n    draw() {\n        this.draw_bar();\n        this.draw_label();\n    }\n\n    draw_bar() {\n        this.$bar = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar',\n            append_to: this.bar_group,\n        });\n\n        if (this.invalid) {\n            this.$bar.classList.add('bar-invalid');\n        }\n    }\n\n    draw_label() {\n        createSVG('text', {\n            x: this.x + this.width / 2,\n            y: this.y + this.height / 2,\n            innerHTML: this.task.name,\n            class: 'bar-label',\n            append_to: this.bar_group,\n        });\n        // labels get BBox in the next tick\n        requestAnimationFrame(() => this.update_label_position());\n    }\n\n    bind() {\n        if (this.invalid) return;\n        this.setup_click_event();\n    }\n\n    setup_click_event() {\n        $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, (e) => {\n            this.show_popup();\n            this.gantt.unselect_all();\n            this.group.classList.add('active');\n        });\n\n        $.on(this.group, 'dblclick', (e) => {\n            this.gantt.trigger_event('click', [this.task]);\n        });\n    }\n\n    show_popup() {\n        const start_date = date_utils.format(\n            this.task._start,\n            'MMM D',\n            this.gantt.options.language\n        );\n        const end_date = date_utils.format(\n            date_utils.add(this.task._end, -1, 'second'),\n            'MMM D',\n            this.gantt.options.language\n        );\n        const subtitle = start_date + ' - ' + end_date;\n\n        this.gantt.show_popup({\n            target_element: this.$bar,\n            title: this.task.name,\n            subtitle: subtitle,\n            task: this.task,\n        });\n    }\n\n    compute_x() {\n        const { step, column_width } = this.gantt.options;\n        const task_start = this.task._start;\n        const gantt_start = this.gantt.gantt_start;\n\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\n        let x = (diff / step) * column_width;\n\n        if (this.gantt.view_is('Month')) {\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\n            x = (diff * column_width) / 30;\n        }\n        return x;\n    }\n\n    compute_y() {\n        return (\n            this.gantt.options.header_height +\n            this.gantt.options.padding +\n            this.task._index * (this.height + this.gantt.options.padding)\n        );\n    }\n\n    update_label_position() {\n        const bar = this.$bar,\n            label = this.group.querySelector('.bar-label');\n\n        if (label.getBBox().width > bar.getWidth() && this.gantt.options.render_big_labels_outside) {\n            label.classList.add('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\n        } else {\n            label.classList.remove('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\n        }\n    }\n}\n","export default class Popup {\n    constructor(parent, custom_html) {\n        this.parent = parent;\n        this.custom_html = custom_html;\n        this.make();\n    }\n\n    make() {\n        this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n        this.hide();\n\n        this.title = this.parent.querySelector('.title');\n        this.subtitle = this.parent.querySelector('.subtitle');\n        this.pointer = this.parent.querySelector('.pointer');\n    }\n\n    show(options) {\n        if (!options.target_element) {\n            throw new Error('target_element is required to show popup');\n        }\n        if (!options.position) {\n            options.position = 'left';\n        }\n        const target_element = options.target_element;\n\n        if (this.custom_html) {\n            let html = this.custom_html(options.task);\n            html += '<div class=\"pointer\"></div>';\n            this.parent.innerHTML = html;\n            this.pointer = this.parent.querySelector('.pointer');\n        } else {\n            // set data\n            this.title.innerHTML = options.title;\n            this.subtitle.innerHTML = options.subtitle;\n            this.parent.style.width = this.parent.clientWidth + 'px';\n        }\n\n        // set position\n        let position_meta;\n        if (target_element instanceof HTMLElement) {\n            position_meta = target_element.getBoundingClientRect();\n        } else if (target_element instanceof SVGElement) {\n            position_meta = options.target_element.getBBox();\n        }\n\n        if (options.position === 'left') {\n            this.parent.style.left =\n                position_meta.x + (position_meta.width + 10) + 'px';\n            this.parent.style.top = position_meta.y + 'px';\n\n            this.pointer.style.transform = 'rotateZ(90deg)';\n            this.pointer.style.left = '-7px';\n            this.pointer.style.top = '2px';\n        }\n\n        // show\n        this.parent.style.opacity = 1;\n    }\n\n    hide() {\n        this.parent.style.opacity = 0;\n        this.parent.style.left = 0;\n    }\n}\n","import date_utils from './date_utils';\nimport { $, createSVG } from './svg_utils';\nimport Bar from './bar';\nimport Popup from './popup';\n\nimport './gantt.scss';\n\nconst VIEW_MODE = {\n    QUARTER_DAY: 'Quarter Day',\n    HALF_DAY: 'Half Day',\n    DAY: 'Day',\n    WEEK: 'Week',\n    MONTH: 'Month',\n    YEAR: 'Year',\n};\n\nexport default class Gantt {\n    constructor(wrapper, tasks, options) {\n        this.setup_wrapper(wrapper);\n        this.setup_options(options);\n        this.setup_tasks(tasks);\n        // initialize with default view mode\n        this.change_view_mode();\n        this.bind_events();\n    }\n\n    setup_wrapper(element) {\n        let svg_element, wrapper_element;\n\n        // CSS Selector is passed\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        }\n\n        // get the SVGElement\n        if (element instanceof HTMLElement) {\n            wrapper_element = element;\n            svg_element = element.querySelector('svg');\n        } else if (element instanceof SVGElement) {\n            svg_element = element;\n        } else {\n            throw new TypeError(\n                'Frappé Gantt only supports usage of a string CSS selector,' +\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\"\n            );\n        }\n\n        // svg element\n        if (!svg_element) {\n            // create it\n            this.$svg = createSVG('svg', {\n                append_to: wrapper_element,\n                class: 'gantt',\n            });\n        } else {\n            this.$svg = svg_element;\n            this.$svg.classList.add('gantt');\n        }\n\n        // wrapper element\n        this.$container = document.createElement('div');\n        this.$container.classList.add('gantt-container');\n\n        const parent_element = this.$svg.parentElement;\n        parent_element.appendChild(this.$container);\n        this.$container.appendChild(this.$svg);\n\n        // popup wrapper\n        this.popup_wrapper = document.createElement('div');\n        this.popup_wrapper.classList.add('popup-wrapper');\n        this.$container.appendChild(this.popup_wrapper);\n    }\n\n    setup_options(options) {\n        const default_options = {\n            header_height: 50,\n            column_width: 30,\n            step: 24,\n            view_modes: [...Object.values(VIEW_MODE)],\n            bar_height: 20,\n            bar_corner_radius: 3,\n            padding: 18,\n            view_mode: 'Day',\n            date_format: 'YYYY-MM-DD',\n            popup_trigger: 'click',\n            custom_popup_html: null,\n            language: 'en',\n            render_big_labels_outside: true,\n        };\n        this.options = Object.assign({}, default_options, options);\n    }\n\n    setup_tasks(tasks) {\n        // prepare tasks\n        this.tasks = tasks.map((task, i) => {\n            // convert to Date objects\n            task._start = date_utils.parse(task.start);\n            task._end = date_utils.parse(task.end);\n\n            // make task invalid if duration too large\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\n                task.end = null;\n            }\n\n            if (undefined === task._index) {\n                task._index = 0;\n            }\n\n            // invalid dates\n            if (!task.start && !task.end) {\n                const today = date_utils.today();\n                task._start = today;\n                task._end = date_utils.add(today, 2, 'day');\n            }\n\n            if (!task.start && task.end) {\n                task._start = date_utils.add(task._end, -2, 'day');\n            }\n\n            if (task.start && !task.end) {\n                task._end = date_utils.add(task._start, 2, 'day');\n            }\n\n            // if hours is not set, assume the last day is full day\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n            const task_end_values = date_utils.get_date_values(task._end);\n            if (task_end_values.slice(3).every((d) => d === 0)) {\n                task._end = date_utils.add(task._end, 24, 'hour');\n            }\n\n            // invalid flag\n            if (!task.start || !task.end) {\n                task.invalid = true;\n            }\n\n            // uids\n            if (!task.id) {\n                task.id = generate_id(task);\n            }\n\n            return task;\n        });\n\n        const reducer = (acc, task) => Math.max(task._index, acc);\n        this.rows = this.tasks.reduce(reducer, 0) + 1;\n    }\n\n    refresh(tasks) {\n        this.setup_tasks(tasks);\n        this.change_view_mode();\n    }\n\n    change_view_mode(mode = this.options.view_mode) {\n        this.update_view_scale(mode);\n        this.setup_dates();\n        this.render();\n        // fire viewmode_change event\n        this.trigger_event('view_change', [mode]);\n    }\n\n    update_view_scale(view_mode) {\n        this.options.view_mode = view_mode;\n\n        if (view_mode === VIEW_MODE.DAY) {\n            this.options.step = 24;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\n            this.options.step = 24 / 2;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n            this.options.step = 24 / 4;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.WEEK) {\n            this.options.step = 24 * 7;\n            this.options.column_width = 140;\n        } else if (view_mode === VIEW_MODE.MONTH) {\n            this.options.step = 24 * 30;\n            this.options.column_width = 120;\n        } else if (view_mode === VIEW_MODE.YEAR) {\n            this.options.step = 24 * 365;\n            this.options.column_width = 120;\n        }\n    }\n\n    setup_dates() {\n        this.setup_gantt_dates();\n        this.setup_date_values();\n    }\n\n    setup_gantt_dates() {\n        this.gantt_start = this.gantt_end = null;\n\n        for (let task of this.tasks) {\n            // set global start and end date\n            if (!this.gantt_start || task._start < this.gantt_start) {\n                this.gantt_start = task._start;\n            }\n            if (!this.gantt_end || task._end > this.gantt_end) {\n                this.gantt_end = task._end;\n            }\n        }\n\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\n        this.gantt_end = date_utils.start_of(this.gantt_end, 'day');\n\n        // add date padding on both sides\n        if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\n            this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\n        } else {\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\n        }\n    }\n\n    setup_date_values() {\n        this.dates = [];\n        let cur_date = null;\n\n        while (cur_date === null || cur_date < this.gantt_end) {\n            if (!cur_date) {\n                cur_date = date_utils.clone(this.gantt_start);\n            } else {\n                if (this.view_is(VIEW_MODE.YEAR)) {\n                    cur_date = date_utils.add(cur_date, 1, 'year');\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\n                    cur_date = date_utils.add(cur_date, 1, 'month');\n                } else {\n                    cur_date = date_utils.add(\n                        cur_date,\n                        this.options.step,\n                        'hour'\n                    );\n                }\n            }\n            this.dates.push(cur_date);\n        }\n    }\n\n    bind_events() {\n        this.bind_grid_click();\n    }\n\n    render() {\n        this.clear();\n        this.setup_layers();\n        this.make_grid();\n        this.make_dates();\n        this.make_bars();\n        this.set_width();\n        this.set_scroll_position();\n    }\n\n    setup_layers() {\n        this.layers = {};\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\n        // make group layers\n        for (let layer of layers) {\n            this.layers[layer] = createSVG('g', {\n                class: layer,\n                append_to: this.$svg,\n            });\n        }\n    }\n\n    make_grid() {\n        this.make_grid_background();\n        this.make_grid_rows();\n        this.make_grid_header();\n        this.make_grid_ticks();\n        this.make_grid_highlights();\n    }\n\n    make_grid_background() {\n        const grid_width = this.dates.length * this.options.column_width;\n        const grid_height =\n            this.options.header_height +\n            this.options.padding +\n            (this.options.bar_height + this.options.padding) *\n                this.rows;\n\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: grid_width,\n            height: grid_height,\n            class: 'grid-background',\n            append_to: this.layers.grid,\n        });\n\n        $.attr(this.$svg, {\n            height: grid_height,\n            width: '100%',\n        });\n    }\n\n    make_grid_rows() {\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\n\n        const row_width = this.dates.length * this.options.column_width;\n        const row_height = this.options.bar_height + this.options.padding;\n\n        let row_y = this.options.header_height + this.options.padding / 2;\n\n        for (let i = 0; i < this.rows; i++) {\n            createSVG('rect', {\n                x: 0,\n                y: row_y,\n                width: row_width,\n                height: row_height,\n                class: 'grid-row',\n                append_to: rows_layer,\n            });\n\n            createSVG('line', {\n                x1: 0,\n                y1: row_y + row_height,\n                x2: row_width,\n                y2: row_y + row_height,\n                class: 'row-line',\n                append_to: lines_layer,\n            });\n\n            row_y += this.options.bar_height + this.options.padding;\n        }\n    }\n\n    make_grid_header() {\n        const header_width = this.dates.length * this.options.column_width;\n        const header_height = this.options.header_height + 10;\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: header_width,\n            height: header_height,\n            class: 'grid-header',\n            append_to: this.layers.grid,\n        });\n    }\n\n    make_grid_ticks() {\n        let tick_x = 0;\n        let tick_y = this.options.header_height + this.options.padding / 2;\n        let tick_height =\n            (this.options.bar_height + this.options.padding) *\n            this.rows;\n\n        for (let date of this.dates) {\n            let tick_class = 'tick';\n            // thick tick for monday\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n                tick_class += ' thick';\n            }\n            // thick tick for first week\n            if (\n                this.view_is(VIEW_MODE.WEEK) &&\n                date.getDate() >= 1 &&\n                date.getDate() < 8\n            ) {\n                tick_class += ' thick';\n            }\n            // thick ticks for quarters\n            if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n                tick_class += ' thick';\n            }\n\n            createSVG('path', {\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n                class: tick_class,\n                append_to: this.layers.grid,\n            });\n\n            if (this.view_is(VIEW_MODE.MONTH)) {\n                tick_x +=\n                    (date_utils.get_days_in_month(date) *\n                        this.options.column_width) /\n                    30;\n            } else {\n                tick_x += this.options.column_width;\n            }\n        }\n    }\n\n    make_grid_highlights() {\n        // highlight today's date\n        if (this.view_is(VIEW_MODE.DAY)) {\n            const x =\n                (date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\n                    this.options.step) *\n                this.options.column_width;\n            const y = 0;\n\n            const width = this.options.column_width;\n            const height =\n                (this.options.bar_height + this.options.padding) *\n                    this.rows +\n                this.options.header_height +\n                this.options.padding / 2;\n\n            createSVG('rect', {\n                x,\n                y,\n                width,\n                height,\n                class: 'today-highlight',\n                append_to: this.layers.grid,\n            });\n        }\n    }\n\n    make_dates() {\n        for (let date of this.get_dates_to_draw()) {\n            createSVG('text', {\n                x: date.lower_x,\n                y: date.lower_y,\n                innerHTML: date.lower_text,\n                class: 'lower-text',\n                append_to: this.layers.date,\n            });\n\n            if (date.upper_text) {\n                const $upper_text = createSVG('text', {\n                    x: date.upper_x,\n                    y: date.upper_y,\n                    innerHTML: date.upper_text,\n                    class: 'upper-text',\n                    append_to: this.layers.date,\n                });\n\n                // remove out-of-bound dates\n                if (\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\n                ) {\n                    $upper_text.remove();\n                }\n            }\n        }\n    }\n\n    get_dates_to_draw() {\n        let last_date = null;\n        const dates = this.dates.map((date, i) => {\n            const d = this.get_date_info(date, last_date, i);\n            last_date = date;\n            return d;\n        });\n        return dates;\n    }\n\n    get_date_info(date, last_date, i) {\n        if (!last_date) {\n            last_date = date_utils.add(date, 1, 'year');\n        }\n        const date_text = {\n            'Quarter Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            'Half Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            Day_lower:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Week_lower:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : date_utils.format(date, 'D', this.options.language),\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\n            'Quarter Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : '',\n            'Half Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date.getMonth() !== last_date.getMonth()\n                        ? date_utils.format(\n                              date,\n                              'D MMM',\n                              this.options.language\n                          )\n                        : date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Day_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Week_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Month_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n            Year_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n        };\n\n        const base_pos = {\n            x: i * this.options.column_width,\n            lower_y: this.options.header_height,\n            upper_y: this.options.header_height - 25,\n        };\n\n        const x_pos = {\n            'Quarter Day_lower': 0,\n            'Quarter Day_upper': (this.options.column_width * 4) / 2,\n            'Half Day_lower': 0,\n            'Half Day_upper': (this.options.column_width * 2) / 2,\n            Day_lower: this.options.column_width / 2,\n            Day_upper: (this.options.column_width * 30) / 2,\n            Week_lower: 0,\n            Week_upper: (this.options.column_width * 4) / 2,\n            Month_lower: this.options.column_width / 2,\n            Month_upper: (this.options.column_width * 12) / 2,\n            Year_lower: this.options.column_width / 2,\n            Year_upper: (this.options.column_width * 30) / 2,\n        };\n\n        return {\n            upper_text: date_text[`${this.options.view_mode}_upper`],\n            lower_text: date_text[`${this.options.view_mode}_lower`],\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n            upper_y: base_pos.upper_y,\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n            lower_y: base_pos.lower_y,\n        };\n    }\n\n    make_bars() {\n        this.bars = this.tasks.map((task) => {\n            const bar = new Bar(this, task);\n            this.layers.bar.appendChild(bar.group);\n            return bar;\n        });\n    }\n\n    set_width() {\n        const cur_width = this.$svg.getBoundingClientRect().width;\n        const actual_width = this.$svg\n            .querySelector('.grid .grid-row')\n            .getAttribute('width');\n        if (cur_width < actual_width) {\n            this.$svg.setAttribute('width', actual_width);\n        }\n    }\n\n    set_scroll_position() {\n        const parent_element = this.$svg.parentElement;\n        if (!parent_element) return;\n\n        const hours_before_first_task = date_utils.diff(\n            this.get_oldest_starting_date(),\n            this.gantt_start,\n            'hour'\n        );\n\n        const scroll_pos =\n            (hours_before_first_task / this.options.step) *\n                this.options.column_width -\n            this.options.column_width;\n\n        parent_element.scrollLeft = scroll_pos;\n    }\n\n    bind_grid_click() {\n        $.on(\n            this.$svg,\n            this.options.popup_trigger,\n            '.grid-row, .grid-header',\n            () => {\n                this.unselect_all();\n                this.hide_popup();\n            }\n        );\n    }\n\n    unselect_all() {\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\n            el.classList.remove('active');\n        });\n    }\n\n    view_is(modes) {\n        if (typeof modes === 'string') {\n            return this.options.view_mode === modes;\n        }\n\n        if (Array.isArray(modes)) {\n            return modes.some((mode) => this.options.view_mode === mode);\n        }\n\n        return false;\n    }\n\n    get_bar(id) {\n        return this.bars.find((bar) => {\n            return bar.task.id === id;\n        });\n    }\n\n    show_popup(options) {\n        if (!this.popup) {\n            this.popup = new Popup(\n                this.popup_wrapper,\n                this.options.custom_popup_html\n            );\n        }\n        this.popup.show(options);\n    }\n\n    hide_popup() {\n        this.popup && this.popup.hide();\n    }\n\n    trigger_event(event, args) {\n        if (this.options['on_' + event]) {\n            this.options['on_' + event].apply(null, args);\n        }\n    }\n\n    /**\n     * Gets the oldest starting date from the list of tasks\n     *\n     * @returns Date\n     * @memberof Gantt\n     */\n    get_oldest_starting_date() {\n        return this.tasks\n            .map((task) => task._start)\n            .reduce((prev_date, cur_date) =>\n                cur_date <= prev_date ? cur_date : prev_date\n            );\n    }\n\n    /**\n     * Clear all elements from the parent svg element\n     *\n     * @memberof Gantt\n     */\n    clear() {\n        this.$svg.innerHTML = '';\n    }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","on","element","event","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","prepare_values","prepare_helpers","invalid","height","options","bar_height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","group","class","custom_class","id","bar_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","draw_bar","draw_label","$bar","rx","ry","classList","name","requestAnimationFrame","update_label_position","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","subtitle","language","target_element","title","task_start","gantt_start","view_is","header_height","padding","_index","bar","label","getBBox","render_big_labels_outside","remove","Popup","parent","custom_html","make","hide","pointer","show","Error","position","html","style","clientWidth","position_meta","HTMLElement","getBoundingClientRect","left","top","transform","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","createElement","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","assign","start","end","undefined","every","random","toString","generate_id","rows","reduce","acc","max","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","dates","cur_date","bind_grid_click","clear","setup_layers","make_grid","make_dates","make_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","grid","rows_layer","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","tick_x","tick_y","tick_height","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Day_lower","Week_lower","Month_lower","Year_lower","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","querySelectorAll","el","modes","Array","isArray","some","get_bar","find","popup","args","apply","prev_date"],"mappings":"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"}